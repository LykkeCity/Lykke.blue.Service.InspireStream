// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.blue.Service.InspireStream.Client.AutorestClient
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for InspireStreamAPI.
    /// </summary>
    public static partial class InspireStreamAPIExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object IsAlive(this IInspireStreamAPI operations)
            {
                return operations.IsAliveAsync().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> IsAliveAsync(this IInspireStreamAPI operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.IsAliveWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='model'>
            /// </param>
            public static int? CreateTweetAccount(this IInspireStreamAPI operations, TwitterAppAccountRquestModel model = default(TwitterAppAccountRquestModel))
            {
                return operations.CreateTweetAccountAsync(model).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='model'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<int?> CreateTweetAccountAsync(this IInspireStreamAPI operations, TwitterAppAccountRquestModel model = default(TwitterAppAccountRquestModel), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateTweetAccountWithHttpMessagesAsync(model, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='model'>
            /// </param>
            public static IList<TweetsResponseModel> GetTweets(this IInspireStreamAPI operations, TweetsSearchModel model = default(TweetsSearchModel))
            {
                return operations.GetTweetsAsync(model).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='model'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<TweetsResponseModel>> GetTweetsAsync(this IInspireStreamAPI operations, TweetsSearchModel model = default(TweetsSearchModel), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetTweetsWithHttpMessagesAsync(model, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
